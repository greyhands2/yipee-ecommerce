{"ast":null,"code":"var _jsxFileName = \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { selectCurrentUser } from '../../redux/user/user.selector';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './cart-dropdown.styles.scss';\nimport CardItem from '../cart-item/cart-item.component';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch,\n  user\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CardItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"YOUR CART IS EMPTY\")), React.createElement(CustomButton, {\n  onClick: () => {\n    dispatch(toggleCartHidden());\n    user ? history.push('/checkout') : history.push('/login');\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  user: selectCurrentUser\n}); //also not that whenever we do not pass a mapDispatchToProps to connect() it still passes a dispatch to props under scene so for the case of toggling the cart hidden we wanna do once we click goto checkout button we can still use dispatch implicitly passed to props by connect instead of having to create a mapDispatchToProps function explicitly, just another way of doing stuff here\n//withRouter is the reason the connect() function and whatever it carries would have acces to the history props we are using to navigate to the checkout page\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","selectCartItems","selectCurrentUser","CustomButton","toggleCartHidden","CardItem","CartDropdown","cartItems","history","dispatch","user","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAGA,SAAQC,eAAR,QAA8B,iCAA9B;AACA,SAAQC,iBAAR,QAAgC,gCAAhC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,OAAO,6BAAP;AAEA,OAAOC,QAAP,MAAqB,kCAArB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA;AAA/B,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGQH,SAAS,CAACI,MAAV,GACAJ,SAAS,CAACK,GAAV,CAAcC,QAAQ,IAAG,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAzB,CADA,GAC0E;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJlF,CADJ,EASA,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAI;AAC3BJ,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACAM,IAAAA,IAAI,GAAGF,OAAO,CAACO,IAAR,CAAa,WAAb,CAAH,GAA8BP,OAAO,CAACO,IAAR,CAAa,QAAb,CAAlC;AACC,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATA,CADJ;;AAiBA,MAAMC,eAAe,GAAGjB,wBAAwB,CAAC;AAC7CQ,EAAAA,SAAS,EAAEN,eADkC;AAE7CS,EAAAA,IAAI,EAAER;AAFuC,CAAD,CAAhD,C,CAIA;AAEA;;AACA,eAAeF,UAAU,CAACF,OAAO,CAACkB,eAAD,CAAP,CAAyBV,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {withRouter} from 'react-router-dom';\n\n\nimport {selectCartItems} from '../../redux/cart/cart.selectors';\nimport {selectCurrentUser} from '../../redux/user/user.selector';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {toggleCartHidden} from '../../redux/cart/cart.actions';\nimport './cart-dropdown.styles.scss';\n\nimport CardItem from '../cart-item/cart-item.component';\nconst CartDropdown = ({cartItems, history, dispatch, user}) =>(\n    <div className='cart-dropdown'>\n        <div className='cart-items'>\n            {\n\n                cartItems.length ? \n                cartItems.map(cartItem=> <CardItem key={cartItem.id} item={cartItem}/>) : <span className='empty-message'>YOUR CART IS EMPTY</span>\n            }\n        </div>\n\n    <CustomButton onClick={()=>{\n    dispatch(toggleCartHidden());    \n    user ? history.push('/checkout'): history.push('/login');\n    }}>GO TO CHECKOUT</CustomButton>\n    </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems,\n    user: selectCurrentUser\n});\n//also not that whenever we do not pass a mapDispatchToProps to connect() it still passes a dispatch to props under scene so for the case of toggling the cart hidden we wanna do once we click goto checkout button we can still use dispatch implicitly passed to props by connect instead of having to create a mapDispatchToProps function explicitly, just another way of doing stuff here\n\n//withRouter is the reason the connect() function and whatever it carries would have acces to the history props we are using to navigate to the checkout page\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}