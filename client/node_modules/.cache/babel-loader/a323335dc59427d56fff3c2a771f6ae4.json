{"ast":null,"code":"import _defineProperty from \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  emailSignUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userData = _useState2[0],\n        setUserData = _useState2[1];\n\n  let displayName = userData.displayName,\n      email = userData.email,\n      password = userData.password,\n      confirmPassword = userData.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords do not match');\n      return;\n    }\n\n    emailSignUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserData(_objectSpread({}, userData, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"username\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"confirm password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Register\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  emailSignUpStart: ({\n    displayName,\n    email,\n    password\n  }) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","emailSignUpStart","displayName","email","password","confirmPassword","userData","setUserData","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport './sign-up.styles.scss';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {signUpStart} from '../../redux/user/user.actions';\n\nconst SignUp = ({emailSignUpStart}) => {\n    const [userData, setUserData] = useState({\n        displayName:'',\n        email: '',\n        password:'',\n        confirmPassword:''\n    });\n    let {displayName, email, password, confirmPassword} = userData;\n    const handleSubmit = async (event)=>{\n        \n        event.preventDefault();\n        \n        if(password !== confirmPassword){\n            alert('passwords do not match');\n            return;\n        }\n         \n        emailSignUpStart({displayName, email, password});\n       \n    };\n\n   const handleChange = (event) =>{\n        const { name, value} = event.target;\n        \n\n        setUserData({ ...userData, [name]: value });\n    }\n\n    \n       \n        \n        return(\n            <div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n                <form onSubmit={ handleSubmit}>\n                  <FormInput name='displayName' type='text' \n                  value={displayName}\n                  handleChange={handleChange} label='username' required/> \n\n                  <FormInput name='email' type='email' \n                  value={email}\n                  handleChange={handleChange} label='email'  required/> \n\n                  <FormInput name='password' type='password' \n                  value={password}\n                  handleChange={handleChange} label='password' required/>\n\n                  <FormInput name='confirmPassword' type='password' \n                  value={confirmPassword}\n                  handleChange={handleChange} label='confirm password' required/>\n\n\n\n                  <CustomButton type='submit'>Register</CustomButton>\n                </form>\n\n\n            </div>\n        );\n    \n}\n\nconst mapDispatchToProps=(dispatch) => ({\n    emailSignUpStart: ({displayName, email, password}) => dispatch(signUpStart({displayName, email, password}))\n})\n\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}