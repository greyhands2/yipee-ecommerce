{"ast":null,"code":"var _jsxFileName = \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shoppage/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport { selectCurrentUser } from './redux/user/user.selector';\nimport { checkUserSession } from './redux/user/user.actions';\n\nconst App = ({\n  userSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    userSession(); // since we know checkUser session would not update we could pass it in the useEffect array to prevent unneeded rerender\n  }, [checkUserSession]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: () => currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : React.createElement(SignInAndSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // collectionsArray: selectCollectionsForPreview\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  userSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","createStructuredSelector","Header","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","selectCurrentUser","checkUserSession","App","userSession","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAGA,SAAQC,iBAAR,QAAiC,4BAAjC;AAEA,SAAQC,gBAAR,QAA+B,2BAA/B;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAAgC;AAK1Cf,EAAAA,SAAS,CAAC,MAAI;AAEZc,IAAAA,WAAW,GAFC,CAIZ;AACD,GALQ,EAKN,CAACF,gBAAD,CALM,CAAT;AASE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,IAAd;AAAoB,IAAA,IAAI,EAAC,GAAzB;AAA6B,IAAA,SAAS,EAAEL,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA,oBAAC,KAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,SAAS,EAAEC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAMA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,IAAd;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,MAAM,EAAE,MAAKK,WAAW,GAAI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,GAA2B,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CAFF,CADF;AAeH,CA7BD;;AA+BA,MAAMC,eAAe,GAAGX,wBAAwB,CAAC;AAC/CU,EAAAA,WAAW,EAAEJ,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;;AAKA,MAAMM,kBAAkB,GAAIC,QAAD,KAAc;AACvCJ,EAAAA,WAAW,EAAE,MAAMI,QAAQ,CAACN,gBAAgB,EAAjB;AADY,CAAd,CAA3B;;AAIA,eAAeR,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CJ,GAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport './App.css';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shoppage/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\n\nimport {selectCurrentUser} from  './redux/user/user.selector'\n\nimport {checkUserSession} from './redux/user/user.actions' \n\nconst App = ({userSession, currentUser}) => {\n \n\n\n\n  useEffect(()=>{\n    \n    userSession();\n\n    // since we know checkUser session would not update we could pass it in the useEffect array to prevent unneeded rerender\n  }, [checkUserSession]);\n\n \n  \n    return (\n      <div>\n        <Header />\n        <Switch>\n        <Route exact={true} path='/' component={HomePage} />\n        {/* because shop page is going to also be used as a nested route we cannot pass exact true in it since we could also have a shop/something */}\n        <Route  path='/shop' component={ShopPage}/>\n        <Route exact path='/checkout' component={CheckoutPage} />\n        \n        <Route exact={true} path='/login' render={()=> currentUser ? (<Redirect to='/'/>) : (<SignInAndSignUpPage />)}/>\n        </Switch>\n      </div>\n    )\n  \n  \n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n  // collectionsArray: selectCollectionsForPreview\n});\n\nconst mapDispatchToProps = (dispatch) =>({\n  userSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}