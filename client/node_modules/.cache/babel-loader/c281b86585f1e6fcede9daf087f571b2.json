{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAEA,KAAK,CAACC,IAAhC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAAC,CAACC,UAAD,CAAD,EAAgBE,IAAD,IAASA,IAAI,CAACE,SAA7B,CAAtC;AAIP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAAC,CAACC,UAAD,CAAD,EAAeE,IAAD,IAASA,IAAI,CAACI,MAA5B,CAAvC;AAEP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAAC,CAACI,eAAD,CAAD,EAAoBC,SAAS,IAAGA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAiCD,mBAAmB,GAACC,QAAQ,CAACC,QAA/E,EAAyF,CAAzF,CAAhC,CAA3C;AAGP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAAC,CAACI,eAAD,CAAD,EAAoBC,SAAS,IAAGA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAiCD,mBAAmB,GAACC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAAnG,EAA0G,CAA1G,CAAhC,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectCart = state=>state.cart;\n\nexport const selectCartItems = createSelector([selectCart], (cart)=> cart.cartItems\n\n);\n\nexport const selectCartHidden = createSelector([selectCart],(cart)=> cart.hidden);\n\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems=> cartItems.reduce((accumulatedQuantity, cartItem)=>accumulatedQuantity+cartItem.quantity, 0))\n\n\nexport const selectCartTotal = createSelector([selectCartItems], cartItems=> cartItems.reduce((accumulatedQuantity, cartItem)=>accumulatedQuantity+cartItem.quantity * cartItem.price, 0));"]},"metadata":{},"sourceType":"module"}