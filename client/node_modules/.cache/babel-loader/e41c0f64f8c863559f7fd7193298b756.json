{"ast":null,"code":"import _defineProperty from \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBZQ2cN1AvNBI35q68ZtDEPakUjDG8plHY\",\n  authDomain: \"yipee-bcb82.firebaseapp.com\",\n  databaseURL: \"https://yipee-bcb82.firebaseio.com\",\n  projectId: \"yipee-bcb82\",\n  storageBucket: \"yipee-bcb82.appspot.com\",\n  messagingSenderId: \"724308184628\",\n  appId: \"1:724308184628:web:ef85e97eb2a9e7a8680461\",\n  measurementId: \"G-7XFE8ZR913\"\n};\nfirebase.initializeApp(config);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n}); //   export const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport const getUserCartRef = async userId => {\n  const cartsRef = firestore.collection('carts').where('userId', '==', userId);\n  const snapShot = await cartsRef.get();\n\n  if (snapShot.empty) {\n    const cartDocRef = firestore.collection('carts').doc();\n    await cartDocRef.set({\n      userId,\n      cartItems: []\n    });\n    return cartDocRef;\n  } else {\n    return snapShot.docs[0].ref;\n  }\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (er) {\n      console.log('error creating user', er);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionSnapshotToMap = collections => {\n  const transformedsCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedsCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport default firebase;","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","userAuth","firestore","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","getUserCartRef","userId","cartsRef","collection","where","snapShot","get","empty","cartDocRef","doc","set","cartItems","docs","ref","createUserProfileDocument","additionalData","userRef","uid","exists","displayName","email","createdAt","Date","er","console","log","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformedsCollection","map","data","title","items","routName","encodeURI","toLowerCase","id","reduce","accumulator"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/firestore';\n\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBZQ2cN1AvNBI35q68ZtDEPakUjDG8plHY\",\n    authDomain: \"yipee-bcb82.firebaseapp.com\",\n    databaseURL: \"https://yipee-bcb82.firebaseio.com\",\n    projectId: \"yipee-bcb82\",\n    storageBucket: \"yipee-bcb82.appspot.com\",\n    messagingSenderId: \"724308184628\",\n    appId: \"1:724308184628:web:ef85e97eb2a9e7a8680461\",\n    measurementId: \"G-7XFE8ZR913\"\n  };\n\n  firebase.initializeApp(config);\n\n  export const getCurrentUser = () => {\n      return new Promise((resolve, reject)=>{\n          const unsubscribe = auth.onAuthStateChanged(userAuth=>{\n              unsubscribe();\n              resolve(userAuth);\n          }, reject);\n      });\n  }\n\n\n  export const auth = firebase.auth();\n\n  export const firestore = firebase.firestore();\n\n  export const googleProvider = new firebase.auth.GoogleAuthProvider();\n\n\n  googleProvider.setCustomParameters({prompt: 'select_account'});\n\n//   export const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\n\nexport const getUserCartRef = async userId => {\n    const cartsRef = firestore.collection('carts').where('userId', '==', userId);\n    const snapShot = await cartsRef.get();\n  \n    if (snapShot.empty) {\n      const cartDocRef = firestore.collection('carts').doc();\n      await cartDocRef.set({ userId, cartItems: [] });\n      return cartDocRef;\n    } else {\n      return snapShot.docs[0].ref;\n    }\n  };\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n      if(!userAuth) return;\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n    if(!snapShot.exists){\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n        try{\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            });\n        }catch(er){\n            console.log('error creating user', er);\n        }\n    }\n    return userRef;\n  }\n\n\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) =>{\n    const collectionRef = firestore.collection(collectionKey);\n   \n    const batch = firestore.batch();\n    objectsToAdd.forEach((obj)=>{\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    });\n\n   return await batch.commit();\n}\n\nexport const convertCollectionSnapshotToMap = (collections) =>{\n    const transformedsCollection = collections.docs.map(doc=>{\n        const {title, items} = doc.data();\n\n        return {\n            routName:encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        }\n    });\n\n\n    return transformedsCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection;\n        return accumulator;\n    }, {})\n}\n\n  export default firebase;\n"]},"metadata":{},"sourceType":"module"}