{"ast":null,"code":"import _defineProperty from \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/components/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  signInEmail,\n  signInGoogle\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    signInEmail(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name; //dynamically set a state using name attribute of a form input\n\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"pasword\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: signInGoogle,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signInGoogle: () => dispatch(googleSignInStart()),\n  signInEmail: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","signInEmail","signInGoogle","email","password","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\nconst SignIn =({signInEmail, signInGoogle})=>{\n    \n   const [userCredentials, setUserCredentials] = useState({email: '', password: ''}); \n\n   const {email, password} = userCredentials;\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        signInEmail(email, password);\n\n    }\n\n\n    const handleChange = (event) => {\nconst { value, name } = event.target;\n//dynamically set a state using name attribute of a form input\nsetUserCredentials({ ...userCredentials, [name]: value });\n\n    }\n\n\n    \n    return (\n<div className='sign-in'>\n<h2>I already have an account</h2>\n<span>Sign in with your email and password</span>\n\n<form onSubmit={handleSubmit}>\n    <FormInput name='email' type='email' value={email} handleChange={handleChange}  label='email' required/>\n\n\n    <FormInput name='password' type='password' value={password} handleChange={handleChange}  label='pasword'  required/>\n\n    <div className='buttons'>\n        <CustomButton type='submit'>\n        Sign In\n        </CustomButton>\n        <CustomButton type='button' onClick={signInGoogle} isGoogleSignIn>\n        Sign In With Google\n        </CustomButton>\n\n    </div>\n</form>\n</div>\n\n    );\n\n\n}\n\nconst mapDispatchToProps =dispatch=>({\n    signInGoogle: () => dispatch(googleSignInStart()),\n    signInEmail: (email, password) => dispatch(emailSignInStart({email,password}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}