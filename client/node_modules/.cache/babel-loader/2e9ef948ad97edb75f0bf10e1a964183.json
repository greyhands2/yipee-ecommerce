{"ast":null,"code":"var _jsxFileName = \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/pages/collection/collection.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport './collection.styles.scss';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  // useEffect(()=>{\n  //     //in useEffect we are also able to return a function, it is called a clean-up function and it is what useEffect calls when the component unmounts, so as u can already guess it's the useEffect way of calling componentWillUnmount()\n  //     return () =>{\n  //     }\n  //     // remember we only pass an empty array to useEffect when we want what's in the effect to  run only when the component mounts for the first time\n  // }, [])\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(\"div\", {\n    className: \"collection-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","selectCollection","CollectionItem","CollectionPage","collection","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;AAGA,OAAOC,cAAP,MAA2B,4DAA3B;AACA,OAAQ,0BAAR;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AACxC;AAEA;AAEA;AAEA;AACA;AACA;AATwC,QAW7BC,KAX6B,GAWbD,UAXa,CAW7BC,KAX6B;AAAA,QAWtBC,KAXsB,GAWbF,UAXa,CAWtBE,KAXsB;AAarC,SAAQ;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADG,EAEH;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAFR,CAFG,CAAR;AAQF,CArBD;;AAuBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAqB;AACzCR,EAAAA,UAAU,EAAEH,gBAAgB,CAACW,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AAD6B,CAArB,CAAxB;;AAIA,eAAeX,OAAO,CAACU,eAAD,CAAP,CAAyBP,cAAzB,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {selectCollection} from '../../redux/shop/shop.selectors';\n\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport  './collection.styles.scss';\n\n\nconst CollectionPage = ({collection}) =>{\n// useEffect(()=>{\n \n//     //in useEffect we are also able to return a function, it is called a clean-up function and it is what useEffect calls when the component unmounts, so as u can already guess it's the useEffect way of calling componentWillUnmount()\n\n//     return () =>{\n\n//     }\n//     // remember we only pass an empty array to useEffect when we want what's in the effect to  run only when the component mounts for the first time\n// }, [])\n    \n    const {title, items} = collection;\n   \n   return (<div className='collection-page'>\n        <h2 className='title'>{title}</h2>\n        <div className='items'>\n            {\n                items.map(item => <CollectionItem key={item.id} item={item}/>)\n            }\n        </div>\n    </div>);\n}\n\nconst mapStateToProps = (state, ownProps) =>({\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n})\n\nexport default connect(mapStateToProps)(CollectionPage);"]},"metadata":{},"sourceType":"module"}