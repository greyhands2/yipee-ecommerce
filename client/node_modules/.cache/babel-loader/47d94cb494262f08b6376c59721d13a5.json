{"ast":null,"code":"var _jsxFileName = \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/App.js\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Header from './components/header/header.component';\nimport Spinner from './components/spinner/spinner.component';\nimport ErrorBoundary from './components/error-boundary/error-boundary.component';\nimport { selectCurrentUser } from './redux/user/user.selector';\nimport { checkUserSession } from './redux/user/user.actions';\nimport { GlobalStyle } from './global.styles';\nconst HomePage = lazy(() => import('./pages/homepage/homepage.component'));\nconst ShopPage = lazy(() => import('./pages/shoppage/shop.component'));\nconst SignInAndSignUpPage = lazy(() => import('./pages/sign-in-and-sign-up/sign-in-and-sign-up.component'));\nconst CheckoutPage = lazy(() => import('./pages/checkout/checkout.component'));\n\nconst App = ({\n  userSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    userSession(); // since we know checkUser session would not update we could pass it in the useEffect array to prevent unneeded rerender\n  }, [checkUserSession]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(ErrorBoundary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: () => currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }) : React.createElement(SignInAndSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // collectionsArray: selectCollectionsForPreview\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  userSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/App.js"],"names":["React","useEffect","lazy","Suspense","Switch","Route","Redirect","connect","createStructuredSelector","Header","Spinner","ErrorBoundary","selectCurrentUser","checkUserSession","GlobalStyle","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","App","userSession","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":[" import React, {useEffect, lazy, Suspense} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\n\nimport Header from './components/header/header.component';\n\nimport Spinner from './components/spinner/spinner.component';\n\nimport ErrorBoundary from './components/error-boundary/error-boundary.component';\nimport {selectCurrentUser} from  './redux/user/user.selector'\n\nimport {checkUserSession} from './redux/user/user.actions' \n\n\nimport {GlobalStyle} from './global.styles';\n\nconst HomePage = lazy(() => import('./pages/homepage/homepage.component'));\nconst ShopPage = lazy(() => import('./pages/shoppage/shop.component'));\nconst SignInAndSignUpPage = lazy(() => import('./pages/sign-in-and-sign-up/sign-in-and-sign-up.component'));\nconst CheckoutPage = lazy(() => import('./pages/checkout/checkout.component'));\n\nconst App = ({userSession, currentUser}) => {\n \n\n\n\n  useEffect(()=>{\n    \n    userSession();\n\n    // since we know checkUser session would not update we could pass it in the useEffect array to prevent unneeded rerender\n  }, [checkUserSession]);\n\n \n  \n    return (\n      <div>\n      <GlobalStyle />\n        <Header />\n        <Switch>\n        <ErrorBoundary>\n        <Suspense fallback={<Spinner />}>\n        <Route exact={true} path='/' component={HomePage} />\n        \n\n        {/* because shop page is going to also be used as a nested route we cannot pass exact true in it since we could also have a shop/something */}\n        <Route  path='/shop' component={ShopPage}/>\n        <Route exact path='/checkout' component={CheckoutPage} />\n        \n        <Route exact={true} path='/login' render={()=> currentUser ? (<Redirect to='/'/>) : (<SignInAndSignUpPage />)}/>\n        </Suspense>\n        </ErrorBoundary>\n        </Switch>\n       \n      </div>\n    )\n  \n  \n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n  // collectionsArray: selectCollectionsForPreview\n});\n\nconst mapDispatchToProps = (dispatch) =>({\n  userSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}