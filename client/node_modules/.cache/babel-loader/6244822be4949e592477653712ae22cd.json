{"ast":null,"code":"import _defineProperty from \"/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get(); //remember put() in saga replaces dispatch() in thunk\n\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signUpWithEmail({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (e) {\n    yield put(signUpFailure(e));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (e) {\n    yield put(signOutFailure(e));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSessions() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onUserSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUpWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSessions), call(onUserSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","e","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUpWithEmail","displayName","createUserWithEmailAndPassword","signInAfterSignUp","signOut","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onSignUpSuccess","SIGN_UP_SUCCESS","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSessions","CHECK_USER_SESSION","onUserSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\n\n\nimport userActionTypes from './user.types';\n\nimport {signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess} from './user.actions';\n\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\n\n\n\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData){\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        \n        const userSnapshot = yield userRef.get();\n        //remember put() in saga replaces dispatch() in thunk\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}) ); \n    } catch(e){\n        yield put(signInFailure(e));\n    }    \n    \n}\n\n\nexport function* signInWithGoogle(){\n    try {\n       const {user} = yield auth.signInWithPopup(googleProvider);\n      yield getSnapshotFromUserAuth(user);\n    } catch(e){\n       yield put(signInFailure(e))\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}){\n\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n\n        yield getSnapshotFromUserAuth(user);\n    }   catch (e) {\n        yield put(signInFailure(e));\n    }\n\n}\n\nexport function* signUpWithEmail({payload:{displayName, email, password}}){\n    try {\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(signUpSuccess({user, additionalData:{displayName}}));\n        \n        \n\n    }catch(e){\n        yield put(signUpFailure(e))\n    }\n}\n\n\nexport function* signInAfterSignUp({payload:{user, additionalData}}){\n    yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* signOut(){\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    }catch(e){\n        yield put(signOutFailure(e));\n    }\n}\n\nexport function* isUserAuthenticated(){\n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    }catch(e){\n        yield put(signInFailure(e))\n    }\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onSignUpSuccess(){\n    yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSessions(){\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\n\n\nexport function* onUserSignOutStart(){\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart(){\n    yield takeLatest(userActionTypes.SIGN_UP_START, signUpWithEmail)\n}\n\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSessions), call(onUserSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}