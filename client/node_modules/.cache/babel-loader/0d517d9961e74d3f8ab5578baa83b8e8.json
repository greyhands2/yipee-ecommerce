{"ast":null,"code":"import { ShopActionTypes } from './shop.types'; // import {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); //this is currently unused cos we changed from thunk to saga\n// export const fetchCollectionsStartAsync = () => {\n//     return dispatch =>{\n//     const collectionRef = firestore.collection('collections');\n//     dispatch(fetchCollectionsStart());\n//     //firebase listener method*observer pattern\n//     // this.unsubscribeFromSnapshot=collectionRef.onSnapshot(async snapshot => {\n//     //   const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n//     // updateTheCollections(collectionsMap);\n//     // this.setState({loading: false});\n//     // });\n//     //getting data from firebase using promise\n//       collectionRef.get().then(snapshot => {\n//         const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n//       dispatch(fetchCollectionsSuccess(collectionsMap));\n//       }).catch((err)=>{\n//         dispatch(fetchCollectionsFailure(err.message));\n//       });\n//     }\n// }","map":{"version":3,"sources":["/home/starq/reactProjz/ReactECommerceBuildUp/yipee/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B,C,CACA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,OAAM;AACvCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADiB,CAAN,CAA9B;AAKP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAI;AACrDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBAD+B;AAGrDC,EAAAA,OAAO,EAAEF;AAH4C,CAAJ,CAA9C;AAOP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAkB;AACrDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAlB,CAAhC,C,CAOP;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import {ShopActionTypes} from './shop.types';\n// import {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () =>({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n    \n});\n\nexport const fetchCollectionsSuccess = collectionsMap =>({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    \n    payload: collectionsMap\n});\n\n\nexport const fetchCollectionsFailure = (errorMessage) =>({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n});\n\n\n\n//this is currently unused cos we changed from thunk to saga\n// export const fetchCollectionsStartAsync = () => {\n    \n//     return dispatch =>{\n       \n//     const collectionRef = firestore.collection('collections');\n//     dispatch(fetchCollectionsStart());\n\n//     //firebase listener method*observer pattern\n//     // this.unsubscribeFromSnapshot=collectionRef.onSnapshot(async snapshot => {\n//     //   const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n//     // updateTheCollections(collectionsMap);\n//     // this.setState({loading: false});\n//     // });\n\n//     //getting data from firebase using promise\n//       collectionRef.get().then(snapshot => {\n//         const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n        \n//       dispatch(fetchCollectionsSuccess(collectionsMap));\n      \n//       }).catch((err)=>{\n//         dispatch(fetchCollectionsFailure(err.message));\n//       });\n//     }\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}